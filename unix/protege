#!/bin/bash

### BEGIN INIT INFO
# Provides:          protege
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Protege OWL Server at boot time
# Description:       Provide OWL Server Services.
### END INIT INFO

. /etc/default/protege

start()
{
   if [ -f ${PID} ] 
   then
       echo Protege server is already running\?
       exit -1
   fi
   mkdir -p ${LOG_DIR}
   chown -R ${PROTEGE_SANDBOX_USER} ${LOG_DIR}
   mkdir -p ${DATA_DIR}/ontologies
   chown -R ${PROTEGE_SANDBOX_USER} ${DATA_DIR}
   cd ${PROTEGE_SERVER_PREFIX}

   su ${PROTEGE_SANDBOX_USER} -s /bin/sh <<-END
     nohup \
       ${JAVA_CMD} \
         -Djava.awt.headless=true \
         -Xmx${PROTEGE_MEMORY} \
         -server -Djava.rmi.server.hostname=${HOSTNAME} \
         -DentityExpansionLimit=1000000 -Dfile.encoding=UTF-8 \
         -Dorg.protege.owl.server.configuration=metaproject.owl \
         -Djava.util.logging.config.file=logging.properties \
         -classpath lib/felix.jar:lib/ProtegeLauncher.jar \
         org.protege.osgi.framework.Launcher > ${LOG_DIR}/cmdline 2>&1 &
     echo \$! > ${PID}
END
}

stop() 
{
    if [ ! -f ${PID} ]
    then
        echo Protege Server not running.
        exit 0
    fi
    kill -TERM `cat ${PID}`
    rm ${PID}
}

status() 
{
   if [ ! -f ${PID} ]
   then 
     echo Protege Server not running
     exit 1
   fi
   pid=`cat ${PID}`
   if [ "x`ps --noheaders --pid $pid`" != "x" ]
   then  
      echo "Protege Server up (pid = ${pid})"
      exit 0
   else
      echo Protege Server does not appear to be running
      echo You may need to clean up the ${PID} file.
      exit 1
   fi
}


case "$1" in
start)
	start
	;;
stop)
    stop
    ;;
restart)
    stop ; start
    ;;
force-reload)
    stop ; start
    ;;
status)
    status
    ;;
esac
